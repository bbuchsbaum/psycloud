// Generated by CoffeeScript 1.7.1
(function() {
  var http, path, phantomjs, suite;

  http = require('http');

  path = require('path');

  phantomjs = require('../src');

  suite = {
    '*suiteSetup': function(done) {
      var i;
      i = 1;
      this.server = http.createServer((function(_this) {
        return function(req, res) {
          if (req.url === '/reloadcb') {
            res.writeHead(200, {
              'Content-Type': 'text/html'
            });
            return res.end("<html>\n  <body>\n    <script>\n      callPhantom('hi');\n    </script>\n  </body>\n</html>");
          }
          res.writeHead(200, {
            'Content-Type': 'text/plain'
          });
          return res.end((i++).toString());
        };
      })(this));
      return this.server.listen(0, '127.0.0.1', (function(_this) {
        return function() {
          _this.port = _this.server.address().port;
          return phantomjs({
            debug: false,
            timeout: 5000
          }, function(err, phantom) {
            _this.phantom = phantom;
            return done();
          });
        };
      })(this));
    },
    '*suiteTeardown': function(done) {
      return this.phantom.close((function(_this) {
        return function() {
          return _this.server.close(function() {
            return done();
          });
        };
      })(this));
    },
    '*setup': function(done) {
      return this.phantom.createPage((function(_this) {
        return function(err, page) {
          _this.page = page;
          return done();
        };
      })(this));
    },
    '*teardown': function(done) {
      return this.page.close(done);
    },
    'create pages': function(done) {
      expect(this.page.id).to.eql(0);
      return this.phantom.createPage((function(_this) {
        return function(err, page) {
          expect(page.id).to.eql(1);
          return page.close(done);
        };
      })(this));
    },
    'open urls': function(done) {
      return this.page.open("http://127.0.0.1:" + this.port, (function(_this) {
        return function(err) {
          return _this.page.get('plainText', function(err, val) {
            expect(val).to.eql('1');
            return done();
          });
        };
      })(this));
    },
    'evaluate and callback': function(done) {
      return this.page.open("http://127.0.0.1:" + this.port, (function(_this) {
        return function(err) {
          return _this.page.get('plainText', function(err, val) {
            expect(val).to.eql('2');
            _this.page.on('callback', function(msg) {
              expect(msg).to.deep.eql({
                name: 'msg'
              });
              return done();
            });
            return _this.page.evaluateJavaScript('(function() { callPhantom({name: "msg"}) })');
          });
        };
      })(this));
    },
    'inject and callback': function(done) {
      return this.page.open("http://127.0.0.1:" + this.port, (function(_this) {
        return function(err) {
          return _this.page.get('plainText', function(err, val) {
            var injectPath;
            expect(val).to.eql('3');
            _this.page.on('callback', function(msg) {
              expect(msg).to.deep.eql('Injected script!');
              return done();
            });
            injectPath = path.resolve(path.join(__dirname, '../../test/inject.js'));
            return _this.page.injectJs(injectPath, function() {});
          });
        };
      })(this));
    },
    'reload': function(done) {
      var i;
      i = 0;
      this.page.on('callback', (function(_this) {
        return function(msg) {
          i++;
          expect(msg).to.eql('hi');
          if (i === 3) {
            return done();
          }
        };
      })(this));
      return this.page.open("http://127.0.0.1:" + this.port + "/reloadcb", (function(_this) {
        return function(err) {
          return _this.page.reload(function() {
            return _this.page.reload();
          });
        };
      })(this));
    }
  };

  run(suite);

}).call(this);
