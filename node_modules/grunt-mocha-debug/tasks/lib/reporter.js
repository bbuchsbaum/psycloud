// Generated by CoffeeScript 1.7.1
(function() {
  var EventEmitter, Reporter, reporterMap, runner, suiteStack;

  reporterMap = require('./reporters');

  EventEmitter = require('events').EventEmitter;

  Reporter = reporterMap[process.argv[2]];

  runner = null;

  suiteStack = null;

  process.on('message', (function(_this) {
    return function(event) {
      var err, fullTitle, obj, reporter, slow, type;
      obj = event.obj, type = event.type, err = event.err;
      switch (type) {
        case 'test':
          suiteStack[suiteStack.length - 1].tests.push(obj);
          break;
        case 'suite':
          obj.suites = [];
          obj.tests = [];
          if (!runner) {
            suiteStack = [obj];
            runner = new EventEmitter();
            runner.suite = obj;
            runner.total = obj.total;
            reporter = new Reporter(runner);
            runner.emit('start');
          } else {
            suiteStack[suiteStack.length - 1].suites.push(obj);
            suiteStack.push(obj);
          }
          break;
        case 'suite end':
          suiteStack.pop();
      }
      if (obj) {
        slow = obj.slow;
        obj.slow = function() {
          return slow;
        };
        fullTitle = obj.fullTitle;
        obj.duration = obj.duration;
        obj.fullTitle = function() {
          return fullTitle;
        };
        obj.parent = suiteStack[suiteStack.length - 1] || null;
        obj.fn = obj.fn;
        obj.pending = obj.pending;
        obj.duration = obj.duration;
        obj.state = obj.state;
      }
      runner.emit(type, obj, err);
      if (type === 'end') {
        return process.exit(0);
      }
    };
  })(this));

}).call(this);
