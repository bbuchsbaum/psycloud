// Generated by CoffeeScript 1.6.3
(function() {
  var coffeescript, expect, renderable, _ref;

  expect = require('expect.js');

  _ref = require('..'), renderable = _ref.renderable, coffeescript = _ref.coffeescript;

  describe('coffeescript', function() {
    return it('renders script tag and javascript with coffee preamble scoped only to that javascript', function() {
      var expected, template;
      template = renderable(function() {
        return coffeescript(function() {
          return alert('hi');
        });
      });
      expected = "<script type=\"text/javascript\">(function() {\n  var __slice = [].slice,\n      __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n      __hasProp = {}.hasOwnProperty,\n      __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n      (function () {\n        return alert(\'hi\');\n      })();\n})();</script>";
      return expect(template().replace(/[\n ]/g, '')).to.equal(expected.replace(/[\n ]/g, ''));
    });
  });

}).call(this);
