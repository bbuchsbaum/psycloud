// Generated by CoffeeScript 1.6.3
(function() {
  var escape, expect, h1, input, raw, render, _ref;

  expect = require('expect.js');

  _ref = require('..'), render = _ref.render, raw = _ref.raw, escape = _ref.escape, h1 = _ref.h1, input = _ref.input;

  describe('Auto escaping', function() {
    describe('a script tag', function() {
      return it("adds HTML entities for sensitive characters", function() {
        var template;
        template = function() {
          return h1("<script>alert('\"owned\" by c&a &copy;')</script>");
        };
        return expect(render(template)).to.equal("<h1>&lt;script&gt;alert('&quot;owned&quot; by c&amp;a &amp;copy;')&lt;/script&gt;</h1>");
      });
    });
    it('escapes tag attributes', function() {
      var template;
      template = function() {
        return input({
          name: '"pwned'
        });
      };
      return expect(render(template)).to.equal('<input name="&quot;pwned" />');
    });
    return it('does not escape single quotes in tag attributes', function() {
      var template;
      template = function() {
        return input({
          name: "'pwned"
        });
      };
      return expect(render(template)).to.equal('<input name="\'pwned" />');
    });
  });

  describe('raw filter', function() {
    it('prints sensitive characters verbatim', function() {
      var template;
      template = function() {
        return raw("<script>alert('on purpose')</script>");
      };
      return expect(render(template)).to.equal("<script>alert('on purpose')</script>");
    });
    return describe('combined with the escape filter', function() {
      return it('gives the author granular control of escaping', function() {
        var template;
        template = function() {
          return raw("<script>alert('" + (escape('perfect <3')) + "')</script>");
        };
        return expect(render(template)).to.equal("<script>alert('perfect &lt;3')</script>");
      });
    });
  });

}).call(this);
