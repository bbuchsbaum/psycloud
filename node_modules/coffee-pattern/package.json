{
  "name": "coffee-pattern",
  "version": "0.0.6",
  "description": "coffee-pattern: write pattern matching in CoffeeScript syntax",
  "main": "pattern.js",
  "scripts": {
    "test": "jasmine-node --autotest --watch pattern.coffee --coffee test.Spec.coffee --verbose"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:jiyinyiyong/coffee-pattern.git"
  },
  "keywords": [
    "pattern",
    "matching"
  ],
  "author": {
    "name": "jiyinyiyong"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jiyinyiyong/coffee-pattern/issues"
  },
  "readme": "\ncoffee-pattern: write pattern matching in CoffeeScript syntax\n------\n\n### Usage\n\nCoffeeScript doesn't support pattern matching, poor language...\n\nInstall from NPM and use in CoffeeScript code:\n\n```bash\nnpm install --save coffee-pattern\n```\n\n```coffee\n{match} = require 'coffee-pattern'\n\nmatch 'string or number here',\n  'string', 'string'\n  /^head/, (data) -> print \"#{data} matches head\"\n  /tail$/, (data) -> print \"#{data} matches tail\"\n  /fine/, 'fine'\n  5, (data) -> print 'it is five'\n  null, -> print 'matches null not undefined'\n  undefined, (data) -> print \"#{data} has no matching pattern\"\n  key: -> 'object as a shortcut'\n```\n\nor more crazy:\n\n```coffee\n{M} = require 'coffee-pattern'\n\nM (a is that),\n  yes, -> M (b is that),\n    yes, -> print 'do something'\n  no, -> M c,\n    'such string', -> that\n    /such\\s|w+/, -> 'that too'\n    undefined, -> M ret,\n      'ok', 'OK'\n      'no', 'NO'\n  undefined, 'fallback'\n```\n\n### features\n\n* normally if the pattern and data are equal, they match.\n* if the pattern is a regular expression, than use expression\n* while there's no matched rule, `null` or `undefined` would be used\n* it returns `undefined` if there's nothing to return\n\n### More\n\nRead `test.Spec.coffee` to see the cases supported.  \nRead `pattern.coffee` to see how this function works.  \nRun tests with `npm test` with Jasmine and CoffeeScript.  \n\nThis is a simple and dirty solution, send me PRs if you have better ideas :)\n\n### License\n\nMIT",
  "readmeFilename": "README.md",
  "_id": "coffee-pattern@0.0.6",
  "_from": "coffee-pattern@"
}
